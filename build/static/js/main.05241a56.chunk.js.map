{"version":3,"sources":["components/Container/index.js","components/Navbar/index.js","lesson/lesson.js","components/Wrapper/index.js","App.js","serviceWorker.js","index.js"],"names":["Container","props","react_default","a","createElement","Object","assign","className","concat","fluid","Navbar","Link","to","href","src","alt","window","location","pathname","NavDropdown","eventKey","title","id","MenuItem","divider","class","Lesson","components_Navbar","components_Container","style","marginTop","Panel","Heading","Title","componentClass","Body","Wrapper","App","BrowserRouter","components_Wrapper","Route","exact","path","component","Boolean","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.05241a56.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction Container(props) {\n    return <div className={`container${props.fluid ? \"-fluid\" : \"\"}`} {...props} />;\n}\n\nexport default Container;","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { NavDropdown, MenuItem} from \"react-bootstrap\"\nimport \"./style.css\";\n\n\n// Depending on the current path, this component sets the \"active\" class on the appropriate navigation link item\nfunction Navbar() {\n return (\n   <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n   \n     <Link className=\"navbar-brand\" to=\"/dashboard\">\n     <a href=\"/dashboard\"><img className=\"logo\" src=\"https://logos-download.com/wp-content/uploads/2016/09/React_logo_wordmark.png\" alt = \"logo\" /></a>\n     </Link>\n    \n     <div>\n       <ul className=\"navbar-nav\">\n          <li className=\"nav-item\">\n           <Link\n             to=\"/dashboard\"\n             className={\n                window.location.pathname === \"/dashboard\"\n                 ? \"nav-link active\"\n                 : \"nav-link\"\n             }\n           >\n           Dashboard\n           </Link> \n         </li> \n         <li >\n         <Link\n             to=\"/lesson\"\n             className={\n                window.location.pathname === \"/lesson\"\n                 ? \"nav-link active\"\n                 : \"nav-link\"\n             }>\n           \n           <NavDropdown eventKey={4} title=\"Lesson\" href = \"/lesson/Page1\" id=\"basic-nav-dropdown\">\n           <MenuItem eventKey={4.1}>\n           <Link\n             to=\"lesson/Page1\"\n             className={\n                window.location.pathname === \"/lesson/Page1\"\n                 ? \"nav-link active\"\n                 : \"nav-link\"\n             }\n           >\n           Page 1\n           </Link>\n           </MenuItem>\n           <MenuItem eventKey={4.2}>\n           <Link\n             to=\"lesson/Page2\"\n             className={\n                window.location.pathname === \"/lesson/Page2\"\n                 ? \"nav-link active\"\n                 : \"nav-link\"\n             }\n           >\n           Page 2\n           </Link>\n           </MenuItem>\n           <MenuItem eventKey={4.3}>\n           <Link\n             to=\"lesson/Page3\"\n             className={\n                window.location.pathname === \"/lesson/Page3\"\n                 ? \"nav-link active\"\n                 : \"nav-link\"\n             }\n           >\n           Page 3\n           </Link>\n         \n          \n           </MenuItem>\n           <MenuItem divider />\n           <MenuItem eventKey={4.4}>\n           <Link\n             to=\"/lesson\"\n             className={\n                window.location.pathname === \"/lesson\"\n                 ? \"nav-link active\"\n                 : \"nav-link\"\n             }\n           >\n           Lesson\n           </Link>\n\n\n           </MenuItem>\n         </NavDropdown>\n          </Link>\n         \n         </li>\n         <li className=\"nav-item\">\n           <Link\n             to=\"/result\"\n             className={window.location.pathname === \"/result\" ? \"nav-link active\" : \"nav-link\"}\n           >\n             Result\n           </Link>\n          \n         </li> \n         \n       </ul>\n       \n     </div>\n     <div >\n     <p>\n        <a href=\"/\" class=\"btn btn-info btn-lg\">\n          <span class=\"glyphicon glyphicon-log-out\"></span> Logout\n        </a>\n      </p> \n          </div>\n   </nav>\n );\n}\n\n \n       \n\nexport default Navbar;","import React from \"react\";\nimport{ Link } from \"react-router-dom\";\nimport Container from \"../components/Container\";\nimport \"./style.css\"\nimport { Panel} from \"react-bootstrap\"\nimport Navbar from \"../components/Navbar\";\n\nfunction Lesson() {\n    return (\n        <div>\n            <Navbar />\n            <Container style={{ marginTop: 30}}>\n\n            <div className = \"lesson\"> <Link        \n                to=\"lesson/Page1\"\n                className={\n                    window.location.pathname === \"/lesson/Page1\"\n                    ? \"nav-link active\"\n                    : \"nav-link\"\n                }\n            ><Panel>\n            <Panel.Heading>\n                <Panel.Title componentClass=\"h3\"> Page 1 - Introduction </Panel.Title>\n             </Panel.Heading>\n            <Panel.Body> \n            <p> Section 1 - How to Create a Github Repository</p>\n            <p> Section 2 - How to Clone a Github Repository Into Your Local Computer</p>\n            <p> Section 3 - How to create a react-app in the recently created local</p>\n\n\n            </Panel.Body>\n            </Panel>\n            \n            </Link>\n\n            <Link\n              to=\"lesson/Page2\"\n              className={\n                 window.location.pathname === \"/lesson/Page2\"\n                  ? \"nav-link active\"\n       \n                  : \"nav-link\"\n              }\n            >\n           <Panel>\n            <Panel.Heading>\n      <Panel.Title componentClass=\"h3\">Page 2 - How to Create Components in React</Panel.Title>\n    </Panel.Heading>\n    <Panel.Body><p> Section 1 - How to Create the Card Component</p>\n    <p> Section 2 - How to Create the Header Component</p>\n    \n    <p> Section 3 - How to Create the Wrapper Component</p></Panel.Body>\n  </Panel>\n            </Link>\n            <Link\n              to=\"lesson/Page3\"\n              className={\n                 window.location.pathname === \"/lesson/Page3\"\n                  ? \"nav-link active\"\n                  : \"nav-link\"\n              }\n            >\n            <Panel>\n            <Panel.Heading>\n      <Panel.Title componentClass=\"h3\">Page 3 - How to Create the Functions for the clicky-game</Panel.Title>\n    </Panel.Heading>\n    <Panel.Body><p> Section 1 - How to create the cards.json file</p>\n    <p> Section 2 - How to Create the Render Function</p>\n    \n    <p> Section 3 - How to Create the clickCount Function</p></Panel.Body>\n  </Panel>\n  </Link>  \n\n\n\n\n\n\n            \n            \n            \n            \n            \n            </div>\n\n\n\n\n\n\n\n\n            \n            \n            \n            </Container>\n\n\n        </div>\n\n\n    )\n\n\n\n}\n\nexport default Lesson;","import React from \"react\";\nimport \"./style.css\";\n\nfunction Wrapper(props) {\n  return <main className=\"wrapper\" {...props} />;\n}\n\n\nexport default Wrapper;","import React from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\n// import Result from \"./resultpage/resultpage\";\n// import Dashboard from \"./dashboardpage/dashboard\";\n// import Login from \"./login/login\";\n// import Register from \"./login/register\";\nimport Lesson from \"./lesson/lesson\";\n// import Page1 from \"./lesson/page1\";\n// import Page2 from \"./lesson/page2\";\n// import Page3 from \"./lesson/page3\";\n\n// import Footer from \"./components/Footer\";\nimport Wrapper from \"./components/Wrapper\";\n// import CodeM from \"./codemirror/index\";\n\nfunction App() {\n return (\n   <Router>\n     <div>\n       \n       <Wrapper>\n         {/* <Route exact path=\"/\" component={Login} /> */}\n         {/* <Route exact path=\"/Register\" component={Register} />\n         <Route exact path=\"/Result\" component={Result} />\n         <Route exact path=\"/Dashboard\" component={Dashboard} /> */}\n         <Route exact path=\"/lesson\" component={Lesson} />\n         {/* <Route exact path=\"/lesson/Page1\" component={Page1} />\n         <Route exact path=\"/lesson/Page2\" component={Page2} />\n         <Route exact path=\"/lesson/Page3\" component={Page3} />        */}\n         {/* <Route exact path=\"/Codem\" component={CodeM} />    */}\n         {/* <Footer />     */}\n       </Wrapper>\n       \n     </div>\n   </Router>\n );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}